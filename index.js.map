{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '50797818-4d1ec28dd028369cf30507a0a';\nconst link = 'https://pixabay.com/api/'\nexport function getImagesByQuery(query){\n        \n    return axios\n        .get(link, {\n        params: {\n            key: API_KEY,\n            q: query,\n            image_type: 'photo',\n            orientation: 'horizontal',\n            safesearch: true,\n        },\n        })\n        .then(response => {\n            \n            if(response.data.hits.length === 0){\n                throw new Error(message);\n            }\n            \n            return response.data.hits;\n        })\n        .catch(error => {\n\n        return null;\n        });\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst listElement = document.querySelector(\".gallery\");\nconst loaderEl = document.querySelector('.display-loader');\n\nfunction createGallery(images) {\n    const gallery =  images.map(({ \n            tags, \n            likes, \n            views, \n            comments, \n            downloads, \n            webformatURL,\n            largeImageURL }) => \n            \n        `<li class=\"item\">\n            <a href=\"${largeImageURL}\">\n                <img class=\"gallery-img\" src=\"${webformatURL}\" alt=\"${tags}\"\n                />\n            </a>\n            <div class=\"notes\">\n                <div class=\"description\">\n                    <h2 class=\"title\">Likes</h2>\n                    <p class=\"amount\">${likes}</p>\n                </div>\n                <div class=\"description\">\n                    <h2 class=\"title\">Views</h2>\n                    <p class=\"amount\">${views}</p>\n                </div>\n                <div class=\"description\">\n                    <h2 class=\"title\">Comments</h2>\n                    <p class=\"amount\">${comments}</p>\n                </div>\n                <div class=\"description\">\n                    <h2 class=\"title\">Downloads</h2>\n                    <p class=\"amount\">${downloads}</p>\n                </div>\n            </div>\n        </li>`).join(\"\");\n\n    listElement.insertAdjacentHTML(\"beforeend\", gallery);\n\n    let lightbox = new SimpleLightbox('.gallery a', {\n        captionsData: 'alt',\n        captionPosition: 'bottom',\n        captionDelay: 250,\n    });\n    lightbox.on('show.simplelightbox');\n}\n\nfunction clearGallery() {\n    listElement.innerHTML=\"\";\n}\n\nfunction showLoader() {\n    loaderEl.classList.remove('is-hidden');\n}\n\nfunction hideLoader() {\n    loaderEl.classList.add('is-hidden');\n}\n\nexport { createGallery, clearGallery, showLoader, hideLoader }","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport { getImagesByQuery } from \"./js/pixabay-api\"\nimport { createGallery, clearGallery, showLoader, hideLoader } from \"./js/render-functions\";\n\n\nconst formEl = document.querySelector(\".form\");\n\nformEl.addEventListener(\"submit\", handleForm);\n\nfunction handleForm(event) {\n    event.preventDefault();\n\n    clearGallery();\n    showLoader();\n\n    const query = event.currentTarget.elements.searchText.value;\n\n    if(!query.trim()){\n        iziToast.error({\n            backgroundColor: \"#ef4040\",\n            timeout: 2000,\n            position: \"topRight\",\n            message: \"Sorry, you have to make a choice!\",\n    });\n        formEl.reset();\n        hideLoader();\n        return;\n    }\n    \n    getImagesByQuery(query)\n        .then(data => {\n            createGallery(data);\n        })\n        .catch(error => {\n            iziToast.error({\n                backgroundColor: \"#ef4040\",\n                timeout: 2000,\n                position: \"topRight\",\n                message: \"Sorry, there are no images matching your search query. Please try again!\",\n            });\n            \n            formEl.reset();\n        })\n        .finally(() => {\n\n            hideLoader();\n            formEl.reset();\n        })\n}\n"],"names":["API_KEY","link","getImagesByQuery","query","axios","response","error","listElement","loaderEl","createGallery","images","gallery","tags","likes","views","comments","downloads","webformatURL","largeImageURL","SimpleLightbox","clearGallery","showLoader","hideLoader","formEl","handleForm","event","iziToast","data"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAO,2BACN,SAASC,EAAiBC,EAAM,CAEnC,OAAOC,EACF,IAAIH,EAAM,CACX,OAAQ,CACJ,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACf,CACT,CAAS,EACA,KAAKE,GAAY,CAEd,GAAGA,EAAS,KAAK,KAAK,SAAW,EAC7B,MAAM,IAAI,MAAM,OAAO,EAG3B,OAAOA,EAAS,KAAK,IACjC,CAAS,EACA,MAAMC,GAEA,IACN,CACT,CCzBA,MAAMC,EAAc,SAAS,cAAc,UAAU,EAC/CC,EAAW,SAAS,cAAc,iBAAiB,EAEzD,SAASC,EAAcC,EAAQ,CAC3B,MAAMC,EAAWD,EAAO,IAAI,CAAC,CACrB,KAAAE,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,EACA,aAAAC,EACA,cAAAC,CAAe,IAEnB;AAAA,uBACeA,CAAa;AAAA,gDACYD,CAAY,UAAUL,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAMlCC,CAAK;AAAA;AAAA;AAAA;AAAA,wCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,wCAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,wCAIRC,CAAS;AAAA;AAAA;AAAA,cAGnC,EAAE,KAAK,EAAE,EAEnBT,EAAY,mBAAmB,YAAaI,CAAO,EAEpC,IAAIQ,EAAe,aAAc,CAC5C,aAAc,MACd,gBAAiB,SACjB,aAAc,GACtB,CAAK,EACQ,GAAG,qBAAqB,CACrC,CAEA,SAASC,GAAe,CACpBb,EAAY,UAAU,EAC1B,CAEA,SAASc,GAAa,CAClBb,EAAS,UAAU,OAAO,WAAW,CACzC,CAEA,SAASc,GAAa,CAClBd,EAAS,UAAU,IAAI,WAAW,CACtC,CCtDA,MAAMe,EAAS,SAAS,cAAc,OAAO,EAE7CA,EAAO,iBAAiB,SAAUC,CAAU,EAE5C,SAASA,EAAWC,EAAO,CACvBA,EAAM,eAAc,EAEpBL,IACAC,IAEA,MAAMlB,EAAQsB,EAAM,cAAc,SAAS,WAAW,MAEtD,GAAG,CAACtB,EAAM,OAAO,CACbuB,EAAS,MAAM,CACX,gBAAiB,UACjB,QAAS,IACT,SAAU,WACV,QAAS,mCACrB,CAAK,EACGH,EAAO,MAAK,EACZD,IACA,MACH,CAEDpB,EAAiBC,CAAK,EACjB,KAAKwB,GAAQ,CACVlB,EAAckB,CAAI,CAC9B,CAAS,EACA,MAAMrB,GAAS,CACZoB,EAAS,MAAM,CACX,gBAAiB,UACjB,QAAS,IACT,SAAU,WACV,QAAS,0EACzB,CAAa,EAEDH,EAAO,MAAK,CACxB,CAAS,EACA,QAAQ,IAAM,CAEXD,IACAC,EAAO,MAAK,CACxB,CAAS,CACT"}